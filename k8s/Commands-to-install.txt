
     Installing AWS and JQ
      sudo apt install -y jq
     sudo apt update
     sudo apt install zip
     curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
     unzip awscliv2.zip
     sudo ./aws/install
     curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
     unzip awscliv2.zip
     sudo ./aws/install

————————————————————————————————————————————————————
Installing Docker

    sudo apt-get update
    sudo apt-get install ca-certificates curl
    sudo install -m 0755 -d /etc/apt/keyrings
    sudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc
    sudo chmod a+r /etc/apt/keyrings/docker.asc
    echo   "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.comlinux/ubuntu \
    $(. /etc/os-release && echo "$VERSION_CODENAME") stable" |   sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
————————————————————————————————————————————————————

Installing go:

     wget https://go.dev/dl/go1.21.6.linux-amd64.tar.gz
     sudo tar -C /usr/local -xzf go1.21.6.linux-amd64.tar.gz
     echo 'export PATH=$PATH:/usr/local/go/bin' >>~/.profile
     source ~/.profile
     go version  ————————————————————————————————————————————————
Opening ports :
 cat <<EOF | sudo tee /etc/modules-load.d/k8s.conf
overlay
br_netfilter
EOF

sudo modprobe overlay
sudo modprobe br_netfilter

# sysctl params required by setup, params persist across reboots
cat <<EOF | sudo tee /etc/sysctl.d/k8s.conf
net.bridge.bridge-nf-call-iptables  = 1
net.bridge.bridge-nf-call-ip6tables = 1
net.ipv4.ip_forward                 = 1
EOF

# Apply sysctl params without reboot
sudo sysctl --system

lsmod | grep br_netfilter
lsmod | grep overlay

sysctl net.bridge.bridge-nf-call-iptables net.bridge.bridge-nf-call-ip6tables net.ipv4.ip_forward

sudo docker info | grep -i cgroup
————————————————————————————————————————————————

Installing dockerd 
     git clone https://github.com/Mirantis/cri-dockerd.git
     cd cri-dockerd
     make cri-dockerd
     sudo mkdir -p /usr/local/bin	
     sudo install -o root -g root -m 0755 cri-dockerd /usr/local/bin/cri-dockerd
     sudo install packaging/systemd/* /etc/systemd/system
     sudo sed -i -e 's,/usr/bin/cri-dockerd,/usr/local/bin/cri-dockerd,' /etc/systemd/system/cri-docker.service
     sudo systemctl daemon-reload
     sudo systemctl enable --now cri-docker.socket
     Sudo systemctl status cri-docker.service
————————————————————————————————————————————————
Setting hostname :

     sudo hostnamectl set-hostname ip-0-0-0-0.eu-north-1.compute.internal

————————————————————————————————————————————————
Installing Kubeadm kubelet and kubectl 	 sudo apt-get update sudo apt-get install -y apt-transport-https ca-certificates curl gpg
sudo mkdir -p -m 755 /etc/apt/keyrings
curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.29/deb/Release.key | sudo gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg
echo 'deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.29/deb/ /' | sudo tee /etc/apt/sources.list.d/kubernetes.list
sudo apt-get update
sudo apt-get install -y kubelet kubeadm kubectl

————————————————————————————————————————————————
Crontab
crontab -e
————————————————————————————————————————————————
nc 127.0.0.1 6443
